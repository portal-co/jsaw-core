"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inlineme_n = exports.inlineme = exports.comptime_static_fn = exports.comptime_number = exports.comptime_string = exports.assert_static_fn = exports.assert_number = exports.assert_string = exports.fast_imul = exports.fast_mul = exports.fast_shl = exports.fast_sub = exports.fast_eq = exports.fast_or = exports.fast_and = exports.fast_add = void 0;
exports.fast_add = globalThis['~Natives_fast_add'] ?? ((a, b) => a + b);
exports.fast_and = globalThis['~Natives_fast_and'] ?? ((a, b) => a & b);
exports.fast_or = globalThis['~Natives_fast_or'] ?? ((a, b) => a | b);
exports.fast_eq = globalThis['~Natives_fast_eq'] ?? ((a, b) => a === b);
exports.fast_sub = globalThis['~Natives_fast_sub'] ?? ((a, b) => a - b);
exports.fast_shl = globalThis['~Natives_fast_shl'] ?? ((a, b) => a << b);
exports.fast_mul = globalThis['~Natives_fast_mul'] ?? ((a, b) => a * b);
exports.fast_imul = globalThis['~Natives_fast_imul'] ?? ((a, b) => Math.imul(a, b));
exports.assert_string = globalThis['~Natives_assert_string'] ?? ((a) => a);
exports.assert_number = globalThis['~Natives_assert_number'] ?? ((a) => a);
exports.assert_static_fn = globalThis['~Natives_assert_static_fn'] ?? ((a) => a);
exports.comptime_string = globalThis['~Natives_comptime_string'] ?? ((a) => a);
exports.comptime_number = globalThis['~Natives_comptime_number'] ?? ((a) => a);
exports.comptime_static_fn = globalThis['~Natives_comptime_static_fn'] ?? ((a) => a);
exports.inlineme = globalThis['~Natives_inlineme'] ?? (() => { });
exports.inlineme_n = globalThis['~Natives_inlineme_n'] ?? ((n) => { });
